stages:
  - build
  - test
  - davical
  - testall

build:
  stage: build
  image: debian:unstable
  script:
    - apt-get -y update
    - bash -c 'mkdir -p /usr/share/man/man{0..10}'
    - apt-get -y install build-essential devscripts fakeroot dh-exec jdupes doxygen graphviz php-cli phpunit
    - mv debian/changelog debian/changelog.old
    - >
      cat
      <(echo "awl ($(cat VERSION)-99~git$(date +"%Y%m%d")-$(git rev-parse --short $CI_COMMIT_SHA)) unstable; urgency=medium")
      <(echo "")
      <(echo "  * Build on CI")
      <(echo "")
      <(echo " -- ${GITLAB_USER_NAME} <${GITLAB_USER_EMAIL}>  $(date -R)")
      <(echo "")
      debian/changelog.old
      > debian/changelog
    - rm debian/changelog.old
    - debuild -us -uc -b -d
    - 'mv ../libawl-php_*_all.deb ./libawl-php.deb'
  artifacts:
    paths:
      - '*.deb'

test:
  stage: test
  image: debian:unstable
  script:
  - apt-get update && apt-get install php php-cli phpunit -yq
  - dpkg -i *.deb
  - for PHP in /usr/share/awl/inc/*.php; do php -l $PHP; done;
  - phpunit --log-junit phpunit.xml tests
  artifacts:
    reports:
      junit: phpunit.xml

davical_tests:
  stage: davical
  image: debian:unstable
  artifacts:
    paths:
      - davical-master/testing/report.xml
      - apache2_log/*
    reports:
      junit: testing/report.xml
    when:
      always
  script:
    - apt-get -y update
    - apt-get -y install curl
    - curl 'https://gitlab.com/davical-project/davical/-/archive/master/davical-master.tar.gz' | tar zxf -
    - davical-master/testing/gitlab_ci_script.sh
    - cd davical-master/testing && su testrunner -c 'IS_CI=yes ALLSUITES="regression-suite binding carddav scheduling" ./run_regressions.sh all x'
  after_script:
    - cp -r /var/log/apache2 apache2_log
    - cp -r /var/log/davical davical_log

test_bookworm_latestphp:
  stage: testall
  image: php:cli-bookworm
  script:
  - for PHP in inc/*.php; do php -l $PHP; done;
  artifacts:
    reports:
      junit: phpunit.xml

test_bullseye_latestphp:
  stage: testall
  image: php:cli-bullseye
  script:
  - for PHP in inc/*.php; do php -l $PHP; done;
  artifacts:
    reports:
      junit: phpunit.xml
